// Code generated by ent, DO NOT EDIT.

package api

const (
	// Label holds the string label denoting the api type in the database.
	Label = "api"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldPath holds the string denoting the path field in the database.
	FieldPath = "path"
	// FieldLevel holds the string denoting the level field in the database.
	FieldLevel = "level"
	// FieldHash holds the string denoting the hash field in the database.
	FieldHash = "hash"
	// FieldRedirect holds the string denoting the redirect field in the database.
	FieldRedirect = "redirect"
	// FieldComponent holds the string denoting the component field in the database.
	FieldComponent = "component"
	// FieldIsSub holds the string denoting the issub field in the database.
	FieldIsSub = "is_sub"
	// FieldHasSub holds the string denoting the hassub field in the database.
	FieldHasSub = "has_sub"
	// FieldSingle holds the string denoting the single field in the database.
	FieldSingle = "single"
	// FieldParentId holds the string denoting the parentid field in the database.
	FieldParentId = "parent_id"
	// FieldTenantId holds the string denoting the tenantid field in the database.
	FieldTenantId = "tenant_id"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updatedat field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeleted holds the string denoting the deleted field in the database.
	FieldDeleted = "deleted"
	// Table holds the table name of the api in the database.
	Table = "ap_is"
)

// Columns holds all SQL columns for api fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldPath,
	FieldLevel,
	FieldHash,
	FieldRedirect,
	FieldComponent,
	FieldIsSub,
	FieldHasSub,
	FieldSingle,
	FieldParentId,
	FieldTenantId,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeleted,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

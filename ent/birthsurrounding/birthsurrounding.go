// Code generated by ent, DO NOT EDIT.

package birthsurrounding

const (
	// Label holds the string label denoting the birthsurrounding type in the database.
	Label = "birth_surrounding"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldFarmId holds the string denoting the farmid field in the database.
	FieldFarmId = "farm_id"
	// FieldFarmName holds the string denoting the farmname field in the database.
	FieldFarmName = "farm_name"
	// FieldRecordTime holds the string denoting the recordtime field in the database.
	FieldRecordTime = "record_time"
	// FieldUserId holds the string denoting the userid field in the database.
	FieldUserId = "user_id"
	// FieldUserName holds the string denoting the username field in the database.
	FieldUserName = "user_name"
	// FieldTemperature holds the string denoting the temperature field in the database.
	FieldTemperature = "temperature"
	// FieldHumidity holds the string denoting the humidity field in the database.
	FieldHumidity = "humidity"
	// FieldBreathRateId holds the string denoting the breathrateid field in the database.
	FieldBreathRateId = "breath_rate_id"
	// FieldBreathRateName holds the string denoting the breathratename field in the database.
	FieldBreathRateName = "breath_rate_name"
	// FieldWindSpeed holds the string denoting the windspeed field in the database.
	FieldWindSpeed = "wind_speed"
	// FieldWindDirectionId holds the string denoting the winddirectionid field in the database.
	FieldWindDirectionId = "wind_direction_id"
	// FieldWindDirection holds the string denoting the winddirection field in the database.
	FieldWindDirection = "wind_direction"
	// FieldLocationChanges holds the string denoting the locationchanges field in the database.
	FieldLocationChanges = "location_changes"
	// FieldHairStateId holds the string denoting the hairstateid field in the database.
	FieldHairStateId = "hair_state_id"
	// FieldHairStateName holds the string denoting the hairstatename field in the database.
	FieldHairStateName = "hair_state_name"
	// FieldSoilDepth holds the string denoting the soildepth field in the database.
	FieldSoilDepth = "soil_depth"
	// FieldSunExposure holds the string denoting the sunexposure field in the database.
	FieldSunExposure = "sun_exposure"
	// FieldWalkDistance holds the string denoting the walkdistance field in the database.
	FieldWalkDistance = "walk_distance"
	// FieldRained holds the string denoting the rained field in the database.
	FieldRained = "rained"
	// FieldThIndex holds the string denoting the thindex field in the database.
	FieldThIndex = "th_index"
	// FieldTenantId holds the string denoting the tenantid field in the database.
	FieldTenantId = "tenant_id"
	// FieldTenantName holds the string denoting the tenantname field in the database.
	FieldTenantName = "tenant_name"
	// FieldRemarks holds the string denoting the remarks field in the database.
	FieldRemarks = "remarks"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updatedat field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeleted holds the string denoting the deleted field in the database.
	FieldDeleted = "deleted"
	// Table holds the table name of the birthsurrounding in the database.
	Table = "birth_surroundings"
)

// Columns holds all SQL columns for birthsurrounding fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldFarmId,
	FieldFarmName,
	FieldRecordTime,
	FieldUserId,
	FieldUserName,
	FieldTemperature,
	FieldHumidity,
	FieldBreathRateId,
	FieldBreathRateName,
	FieldWindSpeed,
	FieldWindDirectionId,
	FieldWindDirection,
	FieldLocationChanges,
	FieldHairStateId,
	FieldHairStateName,
	FieldSoilDepth,
	FieldSunExposure,
	FieldWalkDistance,
	FieldRained,
	FieldThIndex,
	FieldTenantId,
	FieldTenantName,
	FieldRemarks,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeleted,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// FarmNameValidator is a validator for the "farmName" field. It is called by the builders before save.
	FarmNameValidator func(string) error
	// DefaultRained holds the default value on creation for the "rained" field.
	DefaultRained int
)

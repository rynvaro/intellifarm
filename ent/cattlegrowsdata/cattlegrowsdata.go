// Code generated by entc, DO NOT EDIT.

package cattlegrowsdata

const (
	// Label holds the string label denoting the cattlegrowsdata type in the database.
	Label = "cattle_grows_data"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldEarNumber holds the string denoting the earnumber field in the database.
	FieldEarNumber = "ear_number"
	// FieldShedName holds the string denoting the shedname field in the database.
	FieldShedName = "shed_name"
	// FieldMeasuredAt holds the string denoting the measuredat field in the database.
	FieldMeasuredAt = "measured_at"
	// FieldMeasuredBy holds the string denoting the measuredby field in the database.
	FieldMeasuredBy = "measured_by"
	// FieldWeight holds the string denoting the weight field in the database.
	FieldWeight = "weight"
	// FieldBust holds the string denoting the bust field in the database.
	FieldBust = "bust"
	// FieldHeight holds the string denoting the height field in the database.
	FieldHeight = "height"
	// FieldRemarks holds the string denoting the remarks field in the database.
	FieldRemarks = "remarks"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updatedat field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeleted holds the string denoting the deleted field in the database.
	FieldDeleted = "deleted"

	// Table holds the table name of the cattlegrowsdata in the database.
	Table = "cattle_grows_data"
)

// Columns holds all SQL columns for cattlegrowsdata fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldEarNumber,
	FieldShedName,
	FieldMeasuredAt,
	FieldMeasuredBy,
	FieldWeight,
	FieldBust,
	FieldHeight,
	FieldRemarks,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeleted,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

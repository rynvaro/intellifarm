// Code generated by ent, DO NOT EDIT.

package concentrateprocess

const (
	// Label holds the string label denoting the concentrateprocess type in the database.
	Label = "concentrate_process"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldConcentrateId holds the string denoting the concentrateid field in the database.
	FieldConcentrateId = "concentrate_id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDate holds the string denoting the date field in the database.
	FieldDate = "date"
	// FieldCount holds the string denoting the count field in the database.
	FieldCount = "count"
	// FieldIn holds the string denoting the in field in the database.
	FieldIn = "in"
	// FieldUserName holds the string denoting the username field in the database.
	FieldUserName = "user_name"
	// FieldTenantId holds the string denoting the tenantid field in the database.
	FieldTenantId = "tenant_id"
	// FieldTenantName holds the string denoting the tenantname field in the database.
	FieldTenantName = "tenant_name"
	// FieldFarmId holds the string denoting the farmid field in the database.
	FieldFarmId = "farm_id"
	// FieldFarmName holds the string denoting the farmname field in the database.
	FieldFarmName = "farm_name"
	// FieldRemarks holds the string denoting the remarks field in the database.
	FieldRemarks = "remarks"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updatedat field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeleted holds the string denoting the deleted field in the database.
	FieldDeleted = "deleted"
	// Table holds the table name of the concentrateprocess in the database.
	Table = "concentrate_processes"
)

// Columns holds all SQL columns for concentrateprocess fields.
var Columns = []string{
	FieldID,
	FieldConcentrateId,
	FieldName,
	FieldDate,
	FieldCount,
	FieldIn,
	FieldUserName,
	FieldTenantId,
	FieldTenantName,
	FieldFarmId,
	FieldFarmName,
	FieldRemarks,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeleted,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

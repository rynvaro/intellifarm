// Code generated by entc, DO NOT EDIT.

package disinfect

const (
	// Label holds the string label denoting the disinfect type in the database.
	Label = "disinfect"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDate holds the string denoting the date field in the database.
	FieldDate = "date"
	// FieldTypeId holds the string denoting the typeid field in the database.
	FieldTypeId = "type_id"
	// FieldTypeName holds the string denoting the typename field in the database.
	FieldTypeName = "type_name"
	// FieldMethodId holds the string denoting the methodid field in the database.
	FieldMethodId = "method_id"
	// FieldMethodName holds the string denoting the methodname field in the database.
	FieldMethodName = "method_name"
	// FieldWayId holds the string denoting the wayid field in the database.
	FieldWayId = "way_id"
	// FieldWayName holds the string denoting the wayname field in the database.
	FieldWayName = "way_name"
	// FieldDrug holds the string denoting the drug field in the database.
	FieldDrug = "drug"
	// FieldRemarks holds the string denoting the remarks field in the database.
	FieldRemarks = "remarks"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updatedat field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeleted holds the string denoting the deleted field in the database.
	FieldDeleted = "deleted"

	// Table holds the table name of the disinfect in the database.
	Table = "disinfects"
)

// Columns holds all SQL columns for disinfect fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldDate,
	FieldTypeId,
	FieldTypeName,
	FieldMethodId,
	FieldMethodName,
	FieldWayId,
	FieldWayName,
	FieldDrug,
	FieldRemarks,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeleted,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

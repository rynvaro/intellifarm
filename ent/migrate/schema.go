// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebook/ent/dialect/sql/schema"
	"github.com/facebook/ent/schema/field"
)

var (
	// BirthSurroundingsColumns holds the columns for the "birth_surroundings" table.
	BirthSurroundingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "farm_id", Type: field.TypeInt64},
		{Name: "farm_name", Type: field.TypeString},
		{Name: "record_time", Type: field.TypeInt64},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "user_name", Type: field.TypeString},
		{Name: "temperature", Type: field.TypeInt64},
		{Name: "humidity", Type: field.TypeInt64},
		{Name: "breath_rate_id", Type: field.TypeInt64},
		{Name: "breath_rate_name", Type: field.TypeString},
		{Name: "wind_speed", Type: field.TypeInt64},
		{Name: "wind_direction_id", Type: field.TypeInt},
		{Name: "wind_direction", Type: field.TypeString},
		{Name: "location_changes", Type: field.TypeInt64},
		{Name: "hair_state_id", Type: field.TypeInt},
		{Name: "hair_state_name", Type: field.TypeString},
		{Name: "soil_depth", Type: field.TypeInt},
		{Name: "sun_exposure", Type: field.TypeInt},
		{Name: "walk_distance", Type: field.TypeInt},
		{Name: "rained", Type: field.TypeInt},
		{Name: "th_index", Type: field.TypeFloat32},
		{Name: "remarks", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeInt64},
		{Name: "updated_at", Type: field.TypeInt64},
		{Name: "deleted", Type: field.TypeInt},
	}
	// BirthSurroundingsTable holds the schema information for the "birth_surroundings" table.
	BirthSurroundingsTable = &schema.Table{
		Name:        "birth_surroundings",
		Columns:     BirthSurroundingsColumns,
		PrimaryKey:  []*schema.Column{BirthSurroundingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// BreathRatesColumns holds the columns for the "breath_rates" table.
	BreathRatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// BreathRatesTable holds the schema information for the "breath_rates" table.
	BreathRatesTable = &schema.Table{
		Name:        "breath_rates",
		Columns:     BreathRatesColumns,
		PrimaryKey:  []*schema.Column{BreathRatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// BreedingsColumns holds the columns for the "breedings" table.
	BreedingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "ear_number", Type: field.TypeString},
		{Name: "times", Type: field.TypeInt},
		{Name: "breeding_at", Type: field.TypeInt64},
		{Name: "breeding_type_id", Type: field.TypeInt},
		{Name: "breeding_type_name", Type: field.TypeString},
		{Name: "semen_frozen_type_id", Type: field.TypeInt64},
		{Name: "semen_frozen_type_name", Type: field.TypeString},
		{Name: "bull_id", Type: field.TypeString},
		{Name: "shed_name", Type: field.TypeString},
		{Name: "count", Type: field.TypeInt},
		{Name: "user_name", Type: field.TypeString},
		{Name: "remarks", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeInt64},
		{Name: "updated_at", Type: field.TypeInt64},
		{Name: "deleted", Type: field.TypeInt},
	}
	// BreedingsTable holds the schema information for the "breedings" table.
	BreedingsTable = &schema.Table{
		Name:        "breedings",
		Columns:     BreedingsColumns,
		PrimaryKey:  []*schema.Column{BreedingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// BreedingTypesColumns holds the columns for the "breeding_types" table.
	BreedingTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// BreedingTypesTable holds the schema information for the "breeding_types" table.
	BreedingTypesTable = &schema.Table{
		Name:        "breeding_types",
		Columns:     BreedingTypesColumns,
		PrimaryKey:  []*schema.Column{BreedingTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CalvesColumns holds the columns for the "calves" table.
	CalvesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "ear_number", Type: field.TypeString},
		{Name: "times", Type: field.TypeInt},
		{Name: "pregnant_at", Type: field.TypeInt64},
		{Name: "calve_at", Type: field.TypeInt64},
		{Name: "calve_type_id", Type: field.TypeInt},
		{Name: "calve_type_name", Type: field.TypeString},
		{Name: "calve_cate", Type: field.TypeInt},
		{Name: "calve_count_id", Type: field.TypeInt},
		{Name: "calve_count_name", Type: field.TypeString},
		{Name: "complexity", Type: field.TypeInt},
		{Name: "user_name", Type: field.TypeString},
		{Name: "baby_status", Type: field.TypeInt},
		{Name: "baby_gender", Type: field.TypeInt},
		{Name: "baby_ear_number", Type: field.TypeInt},
		{Name: "baby_breed_id", Type: field.TypeInt},
		{Name: "baby_breed_name", Type: field.TypeString},
		{Name: "baby_hair_color_id", Type: field.TypeInt},
		{Name: "baby_hair_color_name", Type: field.TypeString},
		{Name: "baby_weight", Type: field.TypeFloat32},
		{Name: "baby_shed_id", Type: field.TypeInt},
		{Name: "baby_shed_name", Type: field.TypeString},
		{Name: "remarks", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeInt64},
		{Name: "updated_at", Type: field.TypeInt64},
		{Name: "deleted", Type: field.TypeInt},
	}
	// CalvesTable holds the schema information for the "calves" table.
	CalvesTable = &schema.Table{
		Name:        "calves",
		Columns:     CalvesColumns,
		PrimaryKey:  []*schema.Column{CalvesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CalveCountsColumns holds the columns for the "calve_counts" table.
	CalveCountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// CalveCountsTable holds the schema information for the "calve_counts" table.
	CalveCountsTable = &schema.Table{
		Name:        "calve_counts",
		Columns:     CalveCountsColumns,
		PrimaryKey:  []*schema.Column{CalveCountsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CalveTypesColumns holds the columns for the "calve_types" table.
	CalveTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// CalveTypesTable holds the schema information for the "calve_types" table.
	CalveTypesTable = &schema.Table{
		Name:        "calve_types",
		Columns:     CalveTypesColumns,
		PrimaryKey:  []*schema.Column{CalveTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:        "categories",
		Columns:     CategoriesColumns,
		PrimaryKey:  []*schema.Column{CategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CattlesColumns holds the columns for the "cattles" table.
	CattlesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "farm_id", Type: field.TypeInt64},
		{Name: "farm_name", Type: field.TypeString},
		{Name: "shed_id", Type: field.TypeInt64},
		{Name: "shed_name", Type: field.TypeString},
		{Name: "shed_type_id", Type: field.TypeInt64},
		{Name: "shed_type_name", Type: field.TypeString},
		{Name: "ear_number", Type: field.TypeString},
		{Name: "electronic_ear_number", Type: field.TypeString},
		{Name: "pedometer", Type: field.TypeString},
		{Name: "gender_id", Type: field.TypeInt},
		{Name: "gender_name", Type: field.TypeString},
		{Name: "birthday", Type: field.TypeInt64},
		{Name: "joined_at", Type: field.TypeInt64},
		{Name: "cate_id", Type: field.TypeInt},
		{Name: "cate_name", Type: field.TypeString},
		{Name: "type", Type: field.TypeInt},
		{Name: "type_name", Type: field.TypeString},
		{Name: "weight", Type: field.TypeInt32},
		{Name: "from", Type: field.TypeString},
		{Name: "breed", Type: field.TypeString},
		{Name: "joined_type_id", Type: field.TypeInt},
		{Name: "joined_type_name", Type: field.TypeString},
		{Name: "mother", Type: field.TypeString},
		{Name: "father", Type: field.TypeString},
		{Name: "grandfather", Type: field.TypeString},
		{Name: "owner_id", Type: field.TypeInt64},
		{Name: "owner_name", Type: field.TypeString},
		{Name: "hair_color_id", Type: field.TypeInt64},
		{Name: "hair_color_name", Type: field.TypeString},
		{Name: "reproductive_state_id", Type: field.TypeInt},
		{Name: "reproductive_state_name", Type: field.TypeString},
		{Name: "pregnant_times", Type: field.TypeInt},
		{Name: "last_calving_at", Type: field.TypeInt64},
		{Name: "breeding_at", Type: field.TypeInt64},
		{Name: "breeding_type_id", Type: field.TypeInt},
		{Name: "breeding_type_name", Type: field.TypeString},
		{Name: "bull_id", Type: field.TypeInt64},
		{Name: "pregnancy_check_at", Type: field.TypeInt64},
		{Name: "created_at", Type: field.TypeInt64},
		{Name: "updated_at", Type: field.TypeInt64},
		{Name: "deleted", Type: field.TypeInt},
	}
	// CattlesTable holds the schema information for the "cattles" table.
	CattlesTable = &schema.Table{
		Name:        "cattles",
		Columns:     CattlesColumns,
		PrimaryKey:  []*schema.Column{CattlesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CattleCatesColumns holds the columns for the "cattle_cates" table.
	CattleCatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "gender_ids", Type: field.TypeString},
	}
	// CattleCatesTable holds the schema information for the "cattle_cates" table.
	CattleCatesTable = &schema.Table{
		Name:        "cattle_cates",
		Columns:     CattleCatesColumns,
		PrimaryKey:  []*schema.Column{CattleCatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CattleGendersColumns holds the columns for the "cattle_genders" table.
	CattleGendersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// CattleGendersTable holds the schema information for the "cattle_genders" table.
	CattleGendersTable = &schema.Table{
		Name:        "cattle_genders",
		Columns:     CattleGendersColumns,
		PrimaryKey:  []*schema.Column{CattleGendersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CattleGrowsColumns holds the columns for the "cattle_grows" table.
	CattleGrowsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "ear_number", Type: field.TypeString},
		{Name: "stage", Type: field.TypeString},
		{Name: "date_start", Type: field.TypeInt64},
		{Name: "date_end", Type: field.TypeInt64},
		{Name: "weight_start", Type: field.TypeFloat32},
		{Name: "weight_end", Type: field.TypeFloat32},
		{Name: "daily_weight", Type: field.TypeFloat32},
		{Name: "feed_weight", Type: field.TypeFloat32},
		{Name: "daily_feed_weight", Type: field.TypeFloat32},
		{Name: "conversion_rate", Type: field.TypeFloat32},
		{Name: "user_name", Type: field.TypeString},
		{Name: "remarks", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeInt64},
		{Name: "updated_at", Type: field.TypeInt64},
		{Name: "deleted", Type: field.TypeInt},
	}
	// CattleGrowsTable holds the schema information for the "cattle_grows" table.
	CattleGrowsTable = &schema.Table{
		Name:        "cattle_grows",
		Columns:     CattleGrowsColumns,
		PrimaryKey:  []*schema.Column{CattleGrowsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CattleGrowsDataColumns holds the columns for the "cattle_grows_data" table.
	CattleGrowsDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "ear_number", Type: field.TypeString},
		{Name: "shed_name", Type: field.TypeString},
		{Name: "measured_at", Type: field.TypeInt64},
		{Name: "measured_by", Type: field.TypeString},
		{Name: "weight", Type: field.TypeInt},
		{Name: "bust", Type: field.TypeInt},
		{Name: "height", Type: field.TypeInt},
		{Name: "remarks", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeInt64},
		{Name: "updated_at", Type: field.TypeInt64},
		{Name: "deleted", Type: field.TypeInt},
	}
	// CattleGrowsDataTable holds the schema information for the "cattle_grows_data" table.
	CattleGrowsDataTable = &schema.Table{
		Name:        "cattle_grows_data",
		Columns:     CattleGrowsDataColumns,
		PrimaryKey:  []*schema.Column{CattleGrowsDataColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CattleGrowsRatesColumns holds the columns for the "cattle_grows_rates" table.
	CattleGrowsRatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "ear_number", Type: field.TypeString},
		{Name: "shed_name", Type: field.TypeString},
		{Name: "rated_at", Type: field.TypeInt64},
		{Name: "rated_by", Type: field.TypeString},
		{Name: "rate", Type: field.TypeInt},
		{Name: "remarks", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeInt64},
		{Name: "updated_at", Type: field.TypeInt64},
		{Name: "deleted", Type: field.TypeInt},
	}
	// CattleGrowsRatesTable holds the schema information for the "cattle_grows_rates" table.
	CattleGrowsRatesTable = &schema.Table{
		Name:        "cattle_grows_rates",
		Columns:     CattleGrowsRatesColumns,
		PrimaryKey:  []*schema.Column{CattleGrowsRatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CattleHairColorsColumns holds the columns for the "cattle_hair_colors" table.
	CattleHairColorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// CattleHairColorsTable holds the schema information for the "cattle_hair_colors" table.
	CattleHairColorsTable = &schema.Table{
		Name:        "cattle_hair_colors",
		Columns:     CattleHairColorsColumns,
		PrimaryKey:  []*schema.Column{CattleHairColorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CattleJoinedTypesColumns holds the columns for the "cattle_joined_types" table.
	CattleJoinedTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// CattleJoinedTypesTable holds the schema information for the "cattle_joined_types" table.
	CattleJoinedTypesTable = &schema.Table{
		Name:        "cattle_joined_types",
		Columns:     CattleJoinedTypesColumns,
		PrimaryKey:  []*schema.Column{CattleJoinedTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CattleOwnersColumns holds the columns for the "cattle_owners" table.
	CattleOwnersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// CattleOwnersTable holds the schema information for the "cattle_owners" table.
	CattleOwnersTable = &schema.Table{
		Name:        "cattle_owners",
		Columns:     CattleOwnersColumns,
		PrimaryKey:  []*schema.Column{CattleOwnersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CattleTypesColumns holds the columns for the "cattle_types" table.
	CattleTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// CattleTypesTable holds the schema information for the "cattle_types" table.
	CattleTypesTable = &schema.Table{
		Name:        "cattle_types",
		Columns:     CattleTypesColumns,
		PrimaryKey:  []*schema.Column{CattleTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ConfsColumns holds the columns for the "confs" table.
	ConfsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "confs", Type: field.TypeJSON},
	}
	// ConfsTable holds the schema information for the "confs" table.
	ConfsTable = &schema.Table{
		Name:        "confs",
		Columns:     ConfsColumns,
		PrimaryKey:  []*schema.Column{ConfsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// DutiesColumns holds the columns for the "duties" table.
	DutiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// DutiesTable holds the schema information for the "duties" table.
	DutiesTable = &schema.Table{
		Name:        "duties",
		Columns:     DutiesColumns,
		PrimaryKey:  []*schema.Column{DutiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// EstrusColumns holds the columns for the "estrus" table.
	EstrusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "ear_number", Type: field.TypeString},
		{Name: "times", Type: field.TypeInt},
		{Name: "reproductive_state", Type: field.TypeString},
		{Name: "shed_name", Type: field.TypeString},
		{Name: "estrus_at", Type: field.TypeInt64},
		{Name: "estrus_type_id", Type: field.TypeInt},
		{Name: "estrus_type_name", Type: field.TypeString},
		{Name: "user_name", Type: field.TypeString},
		{Name: "remarks", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeInt64},
		{Name: "updated_at", Type: field.TypeInt64},
		{Name: "deleted", Type: field.TypeInt},
	}
	// EstrusTable holds the schema information for the "estrus" table.
	EstrusTable = &schema.Table{
		Name:        "estrus",
		Columns:     EstrusColumns,
		PrimaryKey:  []*schema.Column{EstrusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// EstrusTypesColumns holds the columns for the "estrus_types" table.
	EstrusTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// EstrusTypesTable holds the schema information for the "estrus_types" table.
	EstrusTypesTable = &schema.Table{
		Name:        "estrus_types",
		Columns:     EstrusTypesColumns,
		PrimaryKey:  []*schema.Column{EstrusTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// FarmsColumns holds the columns for the "farms" table.
	FarmsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "construction_date", Type: field.TypeString},
		{Name: "feeding_scale", Type: field.TypeInt64},
		{Name: "contact_user", Type: field.TypeString},
		{Name: "contact_phone", Type: field.TypeString},
		{Name: "contact_address", Type: field.TypeString},
		{Name: "square", Type: field.TypeInt64},
		{Name: "shed_count", Type: field.TypeInt64},
		{Name: "category_id", Type: field.TypeInt64},
		{Name: "category_name", Type: field.TypeString},
		{Name: "variety_id", Type: field.TypeInt64},
		{Name: "variety_name", Type: field.TypeString},
		{Name: "district_code", Type: field.TypeString},
		{Name: "district_name", Type: field.TypeString},
		{Name: "remarks", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeInt64},
		{Name: "updated_at", Type: field.TypeInt64},
		{Name: "deleted", Type: field.TypeInt},
	}
	// FarmsTable holds the schema information for the "farms" table.
	FarmsTable = &schema.Table{
		Name:        "farms",
		Columns:     FarmsColumns,
		PrimaryKey:  []*schema.Column{FarmsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// HairStatesColumns holds the columns for the "hair_states" table.
	HairStatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// HairStatesTable holds the schema information for the "hair_states" table.
	HairStatesTable = &schema.Table{
		Name:        "hair_states",
		Columns:     HairStatesColumns,
		PrimaryKey:  []*schema.Column{HairStatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PositionsColumns holds the columns for the "positions" table.
	PositionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// PositionsTable holds the schema information for the "positions" table.
	PositionsTable = &schema.Table{
		Name:        "positions",
		Columns:     PositionsColumns,
		PrimaryKey:  []*schema.Column{PositionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PregnancyTestsColumns holds the columns for the "pregnancy_tests" table.
	PregnancyTestsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "ear_number", Type: field.TypeString},
		{Name: "times", Type: field.TypeInt},
		{Name: "reproductive_state", Type: field.TypeString},
		{Name: "shed_name", Type: field.TypeString},
		{Name: "breeding_at", Type: field.TypeInt64},
		{Name: "test_at", Type: field.TypeInt64},
		{Name: "pregnancy_test_type_id", Type: field.TypeInt},
		{Name: "pregnancy_test_type_name", Type: field.TypeString},
		{Name: "pregnancy_test_method_id", Type: field.TypeInt},
		{Name: "pregnancy_test_method_name", Type: field.TypeString},
		{Name: "pregnancy_test_result_id", Type: field.TypeInt},
		{Name: "pregnancy_test_result_name", Type: field.TypeString},
		{Name: "user_name", Type: field.TypeString},
		{Name: "remarks", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeInt64},
		{Name: "updated_at", Type: field.TypeInt64},
		{Name: "deleted", Type: field.TypeInt},
	}
	// PregnancyTestsTable holds the schema information for the "pregnancy_tests" table.
	PregnancyTestsTable = &schema.Table{
		Name:        "pregnancy_tests",
		Columns:     PregnancyTestsColumns,
		PrimaryKey:  []*schema.Column{PregnancyTestsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PregnancyTestMethodsColumns holds the columns for the "pregnancy_test_methods" table.
	PregnancyTestMethodsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// PregnancyTestMethodsTable holds the schema information for the "pregnancy_test_methods" table.
	PregnancyTestMethodsTable = &schema.Table{
		Name:        "pregnancy_test_methods",
		Columns:     PregnancyTestMethodsColumns,
		PrimaryKey:  []*schema.Column{PregnancyTestMethodsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PregnancyTestResultsColumns holds the columns for the "pregnancy_test_results" table.
	PregnancyTestResultsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// PregnancyTestResultsTable holds the schema information for the "pregnancy_test_results" table.
	PregnancyTestResultsTable = &schema.Table{
		Name:        "pregnancy_test_results",
		Columns:     PregnancyTestResultsColumns,
		PrimaryKey:  []*schema.Column{PregnancyTestResultsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PregnancyTestTypesColumns holds the columns for the "pregnancy_test_types" table.
	PregnancyTestTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// PregnancyTestTypesTable holds the schema information for the "pregnancy_test_types" table.
	PregnancyTestTypesTable = &schema.Table{
		Name:        "pregnancy_test_types",
		Columns:     PregnancyTestTypesColumns,
		PrimaryKey:  []*schema.Column{PregnancyTestTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ReproductiveStatesColumns holds the columns for the "reproductive_states" table.
	ReproductiveStatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// ReproductiveStatesTable holds the schema information for the "reproductive_states" table.
	ReproductiveStatesTable = &schema.Table{
		Name:        "reproductive_states",
		Columns:     ReproductiveStatesColumns,
		PrimaryKey:  []*schema.Column{ReproductiveStatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// SemenFrozenTypesColumns holds the columns for the "semen_frozen_types" table.
	SemenFrozenTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// SemenFrozenTypesTable holds the schema information for the "semen_frozen_types" table.
	SemenFrozenTypesTable = &schema.Table{
		Name:        "semen_frozen_types",
		Columns:     SemenFrozenTypesColumns,
		PrimaryKey:  []*schema.Column{SemenFrozenTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ShedsColumns holds the columns for the "sheds" table.
	ShedsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "farm_id", Type: field.TypeInt64},
		{Name: "farm_name", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "shed_cate_id", Type: field.TypeInt64},
		{Name: "shed_cate_name", Type: field.TypeString},
		{Name: "shed_type_id", Type: field.TypeInt},
		{Name: "shed_type_name", Type: field.TypeString},
		{Name: "square", Type: field.TypeInt64},
		{Name: "length", Type: field.TypeInt64},
		{Name: "width", Type: field.TypeInt64},
		{Name: "height", Type: field.TypeInt64},
		{Name: "remarks", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "user_name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeInt64},
		{Name: "updated_at", Type: field.TypeInt64},
		{Name: "deleted", Type: field.TypeInt},
	}
	// ShedsTable holds the schema information for the "sheds" table.
	ShedsTable = &schema.Table{
		Name:        "sheds",
		Columns:     ShedsColumns,
		PrimaryKey:  []*schema.Column{ShedsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ShedCategoriesColumns holds the columns for the "shed_categories" table.
	ShedCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// ShedCategoriesTable holds the schema information for the "shed_categories" table.
	ShedCategoriesTable = &schema.Table{
		Name:        "shed_categories",
		Columns:     ShedCategoriesColumns,
		PrimaryKey:  []*schema.Column{ShedCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ShedTypesColumns holds the columns for the "shed_types" table.
	ShedTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// ShedTypesTable holds the schema information for the "shed_types" table.
	ShedTypesTable = &schema.Table{
		Name:        "shed_types",
		Columns:     ShedTypesColumns,
		PrimaryKey:  []*schema.Column{ShedTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "farm_id", Type: field.TypeInt64},
		{Name: "farm_name", Type: field.TypeString},
		{Name: "position_id", Type: field.TypeInt64},
		{Name: "position_name", Type: field.TypeString},
		{Name: "duty_name", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "gender", Type: field.TypeInt},
		{Name: "age", Type: field.TypeInt},
		{Name: "education", Type: field.TypeString},
		{Name: "major", Type: field.TypeString},
		{Name: "job_title", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString},
		{Name: "id_card", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
		{Name: "on_job_state", Type: field.TypeInt, Default: 1},
		{Name: "joined_at", Type: field.TypeInt64},
		{Name: "remarks", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeInt64},
		{Name: "updated_at", Type: field.TypeInt64},
		{Name: "deleted", Type: field.TypeInt},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// WindDirectionsColumns holds the columns for the "wind_directions" table.
	WindDirectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// WindDirectionsTable holds the schema information for the "wind_directions" table.
	WindDirectionsTable = &schema.Table{
		Name:        "wind_directions",
		Columns:     WindDirectionsColumns,
		PrimaryKey:  []*schema.Column{WindDirectionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BirthSurroundingsTable,
		BreathRatesTable,
		BreedingsTable,
		BreedingTypesTable,
		CalvesTable,
		CalveCountsTable,
		CalveTypesTable,
		CategoriesTable,
		CattlesTable,
		CattleCatesTable,
		CattleGendersTable,
		CattleGrowsTable,
		CattleGrowsDataTable,
		CattleGrowsRatesTable,
		CattleHairColorsTable,
		CattleJoinedTypesTable,
		CattleOwnersTable,
		CattleTypesTable,
		ConfsTable,
		DutiesTable,
		EstrusTable,
		EstrusTypesTable,
		FarmsTable,
		HairStatesTable,
		PositionsTable,
		PregnancyTestsTable,
		PregnancyTestMethodsTable,
		PregnancyTestResultsTable,
		PregnancyTestTypesTable,
		ReproductiveStatesTable,
		SemenFrozenTypesTable,
		ShedsTable,
		ShedCategoriesTable,
		ShedTypesTable,
		UsersTable,
		WindDirectionsTable,
	}
)

func init() {
}

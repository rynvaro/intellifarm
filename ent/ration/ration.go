// Code generated by entc, DO NOT EDIT.

package ration

const (
	// Label holds the string label denoting the ration type in the database.
	Label = "ration"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldCode holds the string denoting the code field in the database.
	FieldCode = "code"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldCreateDate holds the string denoting the createdate field in the database.
	FieldCreateDate = "create_date"
	// FieldAdjustDate holds the string denoting the adjustdate field in the database.
	FieldAdjustDate = "adjust_date"
	// FieldDisableDate holds the string denoting the disabledate field in the database.
	FieldDisableDate = "disable_date"
	// FieldCost holds the string denoting the cost field in the database.
	FieldCost = "cost"
	// FieldTenantId holds the string denoting the tenantid field in the database.
	FieldTenantId = "tenant_id"
	// FieldTenantName holds the string denoting the tenantname field in the database.
	FieldTenantName = "tenant_name"
	// FieldRemarks holds the string denoting the remarks field in the database.
	FieldRemarks = "remarks"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updatedat field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeleted holds the string denoting the deleted field in the database.
	FieldDeleted = "deleted"

	// Table holds the table name of the ration in the database.
	Table = "rations"
)

// Columns holds all SQL columns for ration fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldCode,
	FieldStatus,
	FieldCreateDate,
	FieldAdjustDate,
	FieldDisableDate,
	FieldCost,
	FieldTenantId,
	FieldTenantName,
	FieldRemarks,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeleted,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

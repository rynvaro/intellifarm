// Code generated by entc, DO NOT EDIT.

package ent

import (
	"cattleai/ent/abortiontype"
	"cattleai/ent/birthsurrounding"
	"cattleai/ent/breathrate"
	"cattleai/ent/breedingtype"
	"cattleai/ent/calvecount"
	"cattleai/ent/calvetype"
	"cattleai/ent/category"
	"cattleai/ent/cattle"
	"cattleai/ent/cattlecate"
	"cattleai/ent/cattlegender"
	"cattleai/ent/cattlegrow"
	"cattleai/ent/cattlehaircolor"
	"cattleai/ent/cattlejoinedtype"
	"cattleai/ent/cattlemovereason"
	"cattleai/ent/cattleowner"
	"cattleai/ent/cattletype"
	"cattleai/ent/duty"
	"cattleai/ent/epidemictype"
	"cattleai/ent/estrustype"
	"cattleai/ent/farm"
	"cattleai/ent/feedinfo"
	"cattleai/ent/hairstate"
	"cattleai/ent/material"
	"cattleai/ent/position"
	"cattleai/ent/pregnancytestmethod"
	"cattleai/ent/pregnancytestresult"
	"cattleai/ent/pregnancytesttype"
	"cattleai/ent/reproductivestate"
	"cattleai/ent/schema"
	"cattleai/ent/shed"
	"cattleai/ent/tenant"
	"cattleai/ent/treatmentresult"
	"cattleai/ent/treatmentstate"
	"cattleai/ent/user"
	"cattleai/ent/whereabouts"
	"cattleai/ent/winddirection"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	abortiontypeFields := schema.AbortionType{}.Fields()
	_ = abortiontypeFields
	// abortiontypeDescName is the schema descriptor for name field.
	abortiontypeDescName := abortiontypeFields[0].Descriptor()
	// abortiontype.NameValidator is a validator for the "name" field. It is called by the builders before save.
	abortiontype.NameValidator = abortiontypeDescName.Validators[0].(func(string) error)
	birthsurroundingFields := schema.BirthSurrounding{}.Fields()
	_ = birthsurroundingFields
	// birthsurroundingDescFarmName is the schema descriptor for farmName field.
	birthsurroundingDescFarmName := birthsurroundingFields[2].Descriptor()
	// birthsurrounding.FarmNameValidator is a validator for the "farmName" field. It is called by the builders before save.
	birthsurrounding.FarmNameValidator = birthsurroundingDescFarmName.Validators[0].(func(string) error)
	// birthsurroundingDescRained is the schema descriptor for rained field.
	birthsurroundingDescRained := birthsurroundingFields[19].Descriptor()
	// birthsurrounding.DefaultRained holds the default value on creation for the rained field.
	birthsurrounding.DefaultRained = birthsurroundingDescRained.Default.(int)
	breathrateFields := schema.BreathRate{}.Fields()
	_ = breathrateFields
	// breathrateDescName is the schema descriptor for name field.
	breathrateDescName := breathrateFields[0].Descriptor()
	// breathrate.NameValidator is a validator for the "name" field. It is called by the builders before save.
	breathrate.NameValidator = breathrateDescName.Validators[0].(func(string) error)
	breedingtypeFields := schema.BreedingType{}.Fields()
	_ = breedingtypeFields
	// breedingtypeDescName is the schema descriptor for name field.
	breedingtypeDescName := breedingtypeFields[0].Descriptor()
	// breedingtype.NameValidator is a validator for the "name" field. It is called by the builders before save.
	breedingtype.NameValidator = breedingtypeDescName.Validators[0].(func(string) error)
	calvecountFields := schema.CalveCount{}.Fields()
	_ = calvecountFields
	// calvecountDescName is the schema descriptor for name field.
	calvecountDescName := calvecountFields[0].Descriptor()
	// calvecount.NameValidator is a validator for the "name" field. It is called by the builders before save.
	calvecount.NameValidator = calvecountDescName.Validators[0].(func(string) error)
	calvetypeFields := schema.CalveType{}.Fields()
	_ = calvetypeFields
	// calvetypeDescName is the schema descriptor for name field.
	calvetypeDescName := calvetypeFields[0].Descriptor()
	// calvetype.NameValidator is a validator for the "name" field. It is called by the builders before save.
	calvetype.NameValidator = calvetypeDescName.Validators[0].(func(string) error)
	categoryFields := schema.Category{}.Fields()
	_ = categoryFields
	// categoryDescName is the schema descriptor for name field.
	categoryDescName := categoryFields[0].Descriptor()
	// category.NameValidator is a validator for the "name" field. It is called by the builders before save.
	category.NameValidator = categoryDescName.Validators[0].(func(string) error)
	cattleFields := schema.Cattle{}.Fields()
	_ = cattleFields
	// cattleDescAlive is the schema descriptor for alive field.
	cattleDescAlive := cattleFields[0].Descriptor()
	// cattle.DefaultAlive holds the default value on creation for the alive field.
	cattle.DefaultAlive = cattleDescAlive.Default.(int)
	// cattleDescHealth is the schema descriptor for health field.
	cattleDescHealth := cattleFields[1].Descriptor()
	// cattle.DefaultHealth holds the default value on creation for the health field.
	cattle.DefaultHealth = cattleDescHealth.Default.(int)
	// cattleDescFarmName is the schema descriptor for farmName field.
	cattleDescFarmName := cattleFields[6].Descriptor()
	// cattle.FarmNameValidator is a validator for the "farmName" field. It is called by the builders before save.
	cattle.FarmNameValidator = cattleDescFarmName.Validators[0].(func(string) error)
	// cattleDescShedName is the schema descriptor for shedName field.
	cattleDescShedName := cattleFields[8].Descriptor()
	// cattle.ShedNameValidator is a validator for the "shedName" field. It is called by the builders before save.
	cattle.ShedNameValidator = cattleDescShedName.Validators[0].(func(string) error)
	// cattleDescShedTypeName is the schema descriptor for shedTypeName field.
	cattleDescShedTypeName := cattleFields[10].Descriptor()
	// cattle.ShedTypeNameValidator is a validator for the "shedTypeName" field. It is called by the builders before save.
	cattle.ShedTypeNameValidator = cattleDescShedTypeName.Validators[0].(func(string) error)
	// cattleDescEarNumber is the schema descriptor for earNumber field.
	cattleDescEarNumber := cattleFields[11].Descriptor()
	// cattle.EarNumberValidator is a validator for the "earNumber" field. It is called by the builders before save.
	cattle.EarNumberValidator = cattleDescEarNumber.Validators[0].(func(string) error)
	cattlecateFields := schema.CattleCate{}.Fields()
	_ = cattlecateFields
	// cattlecateDescName is the schema descriptor for name field.
	cattlecateDescName := cattlecateFields[0].Descriptor()
	// cattlecate.NameValidator is a validator for the "name" field. It is called by the builders before save.
	cattlecate.NameValidator = cattlecateDescName.Validators[0].(func(string) error)
	// cattlecateDescGenderIds is the schema descriptor for genderIds field.
	cattlecateDescGenderIds := cattlecateFields[1].Descriptor()
	// cattlecate.GenderIdsValidator is a validator for the "genderIds" field. It is called by the builders before save.
	cattlecate.GenderIdsValidator = cattlecateDescGenderIds.Validators[0].(func(string) error)
	cattlegenderFields := schema.CattleGender{}.Fields()
	_ = cattlegenderFields
	// cattlegenderDescName is the schema descriptor for name field.
	cattlegenderDescName := cattlegenderFields[0].Descriptor()
	// cattlegender.NameValidator is a validator for the "name" field. It is called by the builders before save.
	cattlegender.NameValidator = cattlegenderDescName.Validators[0].(func(string) error)
	cattlegrowFields := schema.CattleGrow{}.Fields()
	_ = cattlegrowFields
	// cattlegrowDescEarNumber is the schema descriptor for earNumber field.
	cattlegrowDescEarNumber := cattlegrowFields[1].Descriptor()
	// cattlegrow.EarNumberValidator is a validator for the "earNumber" field. It is called by the builders before save.
	cattlegrow.EarNumberValidator = cattlegrowDescEarNumber.Validators[0].(func(string) error)
	// cattlegrowDescStage is the schema descriptor for stage field.
	cattlegrowDescStage := cattlegrowFields[2].Descriptor()
	// cattlegrow.StageValidator is a validator for the "stage" field. It is called by the builders before save.
	cattlegrow.StageValidator = cattlegrowDescStage.Validators[0].(func(string) error)
	cattlehaircolorFields := schema.CattleHairColor{}.Fields()
	_ = cattlehaircolorFields
	// cattlehaircolorDescName is the schema descriptor for name field.
	cattlehaircolorDescName := cattlehaircolorFields[0].Descriptor()
	// cattlehaircolor.NameValidator is a validator for the "name" field. It is called by the builders before save.
	cattlehaircolor.NameValidator = cattlehaircolorDescName.Validators[0].(func(string) error)
	cattlejoinedtypeFields := schema.CattleJoinedType{}.Fields()
	_ = cattlejoinedtypeFields
	// cattlejoinedtypeDescName is the schema descriptor for name field.
	cattlejoinedtypeDescName := cattlejoinedtypeFields[0].Descriptor()
	// cattlejoinedtype.NameValidator is a validator for the "name" field. It is called by the builders before save.
	cattlejoinedtype.NameValidator = cattlejoinedtypeDescName.Validators[0].(func(string) error)
	cattlemovereasonFields := schema.CattleMoveReason{}.Fields()
	_ = cattlemovereasonFields
	// cattlemovereasonDescName is the schema descriptor for name field.
	cattlemovereasonDescName := cattlemovereasonFields[0].Descriptor()
	// cattlemovereason.NameValidator is a validator for the "name" field. It is called by the builders before save.
	cattlemovereason.NameValidator = cattlemovereasonDescName.Validators[0].(func(string) error)
	cattleownerFields := schema.CattleOwner{}.Fields()
	_ = cattleownerFields
	// cattleownerDescName is the schema descriptor for name field.
	cattleownerDescName := cattleownerFields[0].Descriptor()
	// cattleowner.NameValidator is a validator for the "name" field. It is called by the builders before save.
	cattleowner.NameValidator = cattleownerDescName.Validators[0].(func(string) error)
	cattletypeFields := schema.CattleType{}.Fields()
	_ = cattletypeFields
	// cattletypeDescName is the schema descriptor for name field.
	cattletypeDescName := cattletypeFields[0].Descriptor()
	// cattletype.NameValidator is a validator for the "name" field. It is called by the builders before save.
	cattletype.NameValidator = cattletypeDescName.Validators[0].(func(string) error)
	dutyFields := schema.Duty{}.Fields()
	_ = dutyFields
	// dutyDescName is the schema descriptor for name field.
	dutyDescName := dutyFields[0].Descriptor()
	// duty.NameValidator is a validator for the "name" field. It is called by the builders before save.
	duty.NameValidator = dutyDescName.Validators[0].(func(string) error)
	epidemictypeFields := schema.EpidemicType{}.Fields()
	_ = epidemictypeFields
	// epidemictypeDescName is the schema descriptor for name field.
	epidemictypeDescName := epidemictypeFields[0].Descriptor()
	// epidemictype.NameValidator is a validator for the "name" field. It is called by the builders before save.
	epidemictype.NameValidator = epidemictypeDescName.Validators[0].(func(string) error)
	estrustypeFields := schema.EstrusType{}.Fields()
	_ = estrustypeFields
	// estrustypeDescName is the schema descriptor for name field.
	estrustypeDescName := estrustypeFields[0].Descriptor()
	// estrustype.NameValidator is a validator for the "name" field. It is called by the builders before save.
	estrustype.NameValidator = estrustypeDescName.Validators[0].(func(string) error)
	farmFields := schema.Farm{}.Fields()
	_ = farmFields
	// farmDescName is the schema descriptor for name field.
	farmDescName := farmFields[0].Descriptor()
	// farm.NameValidator is a validator for the "name" field. It is called by the builders before save.
	farm.NameValidator = farmDescName.Validators[0].(func(string) error)
	// farmDescCode is the schema descriptor for code field.
	farmDescCode := farmFields[1].Descriptor()
	// farm.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	farm.CodeValidator = farmDescCode.Validators[0].(func(string) error)
	// farmDescDeleted is the schema descriptor for deleted field.
	farmDescDeleted := farmFields[20].Descriptor()
	// farm.DefaultDeleted holds the default value on creation for the deleted field.
	farm.DefaultDeleted = farmDescDeleted.Default.(int)
	feedinfoFields := schema.FeedInfo{}.Fields()
	_ = feedinfoFields
	// feedinfoDescCreatedAt is the schema descriptor for createdAt field.
	feedinfoDescCreatedAt := feedinfoFields[40].Descriptor()
	// feedinfo.DefaultCreatedAt holds the default value on creation for the createdAt field.
	feedinfo.DefaultCreatedAt = feedinfoDescCreatedAt.Default.(int64)
	// feedinfoDescUpdatedAt is the schema descriptor for updatedAt field.
	feedinfoDescUpdatedAt := feedinfoFields[41].Descriptor()
	// feedinfo.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	feedinfo.DefaultUpdatedAt = feedinfoDescUpdatedAt.Default.(int64)
	// feedinfoDescDeleted is the schema descriptor for deleted field.
	feedinfoDescDeleted := feedinfoFields[42].Descriptor()
	// feedinfo.DefaultDeleted holds the default value on creation for the deleted field.
	feedinfo.DefaultDeleted = feedinfoDescDeleted.Default.(int)
	hairstateFields := schema.HairState{}.Fields()
	_ = hairstateFields
	// hairstateDescName is the schema descriptor for name field.
	hairstateDescName := hairstateFields[0].Descriptor()
	// hairstate.NameValidator is a validator for the "name" field. It is called by the builders before save.
	hairstate.NameValidator = hairstateDescName.Validators[0].(func(string) error)
	materialFields := schema.Material{}.Fields()
	_ = materialFields
	// materialDescInventory is the schema descriptor for inventory field.
	materialDescInventory := materialFields[6].Descriptor()
	// material.DefaultInventory holds the default value on creation for the inventory field.
	material.DefaultInventory = materialDescInventory.Default.(int64)
	positionFields := schema.Position{}.Fields()
	_ = positionFields
	// positionDescName is the schema descriptor for name field.
	positionDescName := positionFields[0].Descriptor()
	// position.NameValidator is a validator for the "name" field. It is called by the builders before save.
	position.NameValidator = positionDescName.Validators[0].(func(string) error)
	// positionDescTenantId is the schema descriptor for tenantId field.
	positionDescTenantId := positionFields[2].Descriptor()
	// position.DefaultTenantId holds the default value on creation for the tenantId field.
	position.DefaultTenantId = positionDescTenantId.Default.(int64)
	// positionDescTenantName is the schema descriptor for tenantName field.
	positionDescTenantName := positionFields[3].Descriptor()
	// position.DefaultTenantName holds the default value on creation for the tenantName field.
	position.DefaultTenantName = positionDescTenantName.Default.(string)
	pregnancytestmethodFields := schema.PregnancyTestMethod{}.Fields()
	_ = pregnancytestmethodFields
	// pregnancytestmethodDescName is the schema descriptor for name field.
	pregnancytestmethodDescName := pregnancytestmethodFields[0].Descriptor()
	// pregnancytestmethod.NameValidator is a validator for the "name" field. It is called by the builders before save.
	pregnancytestmethod.NameValidator = pregnancytestmethodDescName.Validators[0].(func(string) error)
	pregnancytestresultFields := schema.PregnancyTestResult{}.Fields()
	_ = pregnancytestresultFields
	// pregnancytestresultDescName is the schema descriptor for name field.
	pregnancytestresultDescName := pregnancytestresultFields[0].Descriptor()
	// pregnancytestresult.NameValidator is a validator for the "name" field. It is called by the builders before save.
	pregnancytestresult.NameValidator = pregnancytestresultDescName.Validators[0].(func(string) error)
	pregnancytesttypeFields := schema.PregnancyTestType{}.Fields()
	_ = pregnancytesttypeFields
	// pregnancytesttypeDescName is the schema descriptor for name field.
	pregnancytesttypeDescName := pregnancytesttypeFields[0].Descriptor()
	// pregnancytesttype.NameValidator is a validator for the "name" field. It is called by the builders before save.
	pregnancytesttype.NameValidator = pregnancytesttypeDescName.Validators[0].(func(string) error)
	reproductivestateFields := schema.ReproductiveState{}.Fields()
	_ = reproductivestateFields
	// reproductivestateDescName is the schema descriptor for name field.
	reproductivestateDescName := reproductivestateFields[0].Descriptor()
	// reproductivestate.NameValidator is a validator for the "name" field. It is called by the builders before save.
	reproductivestate.NameValidator = reproductivestateDescName.Validators[0].(func(string) error)
	shedFields := schema.Shed{}.Fields()
	_ = shedFields
	// shedDescFarmName is the schema descriptor for farmName field.
	shedDescFarmName := shedFields[1].Descriptor()
	// shed.FarmNameValidator is a validator for the "farmName" field. It is called by the builders before save.
	shed.FarmNameValidator = shedDescFarmName.Validators[0].(func(string) error)
	// shedDescName is the schema descriptor for name field.
	shedDescName := shedFields[2].Descriptor()
	// shed.NameValidator is a validator for the "name" field. It is called by the builders before save.
	shed.NameValidator = shedDescName.Validators[0].(func(string) error)
	// shedDescShedCateName is the schema descriptor for shedCateName field.
	shedDescShedCateName := shedFields[4].Descriptor()
	// shed.ShedCateNameValidator is a validator for the "shedCateName" field. It is called by the builders before save.
	shed.ShedCateNameValidator = shedDescShedCateName.Validators[0].(func(string) error)
	// shedDescShedTypeName is the schema descriptor for shedTypeName field.
	shedDescShedTypeName := shedFields[6].Descriptor()
	// shed.ShedTypeNameValidator is a validator for the "shedTypeName" field. It is called by the builders before save.
	shed.ShedTypeNameValidator = shedDescShedTypeName.Validators[0].(func(string) error)
	tenantFields := schema.Tenant{}.Fields()
	_ = tenantFields
	// tenantDescDeleted is the schema descriptor for deleted field.
	tenantDescDeleted := tenantFields[9].Descriptor()
	// tenant.DefaultDeleted holds the default value on creation for the deleted field.
	tenant.DefaultDeleted = tenantDescDeleted.Default.(int)
	treatmentresultFields := schema.TreatmentResult{}.Fields()
	_ = treatmentresultFields
	// treatmentresultDescName is the schema descriptor for name field.
	treatmentresultDescName := treatmentresultFields[0].Descriptor()
	// treatmentresult.NameValidator is a validator for the "name" field. It is called by the builders before save.
	treatmentresult.NameValidator = treatmentresultDescName.Validators[0].(func(string) error)
	treatmentstateFields := schema.TreatmentState{}.Fields()
	_ = treatmentstateFields
	// treatmentstateDescName is the schema descriptor for name field.
	treatmentstateDescName := treatmentstateFields[0].Descriptor()
	// treatmentstate.NameValidator is a validator for the "name" field. It is called by the builders before save.
	treatmentstate.NameValidator = treatmentstateDescName.Validators[0].(func(string) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[6].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescOnJobState is the schema descriptor for onJobState field.
	userDescOnJobState := userFields[15].Descriptor()
	// user.DefaultOnJobState holds the default value on creation for the onJobState field.
	user.DefaultOnJobState = userDescOnJobState.Default.(int)
	// userDescDeleted is the schema descriptor for deleted field.
	userDescDeleted := userFields[23].Descriptor()
	// user.DefaultDeleted holds the default value on creation for the deleted field.
	user.DefaultDeleted = userDescDeleted.Default.(int)
	whereaboutsFields := schema.Whereabouts{}.Fields()
	_ = whereaboutsFields
	// whereaboutsDescName is the schema descriptor for name field.
	whereaboutsDescName := whereaboutsFields[0].Descriptor()
	// whereabouts.NameValidator is a validator for the "name" field. It is called by the builders before save.
	whereabouts.NameValidator = whereaboutsDescName.Validators[0].(func(string) error)
	winddirectionFields := schema.WindDirection{}.Fields()
	_ = winddirectionFields
	// winddirectionDescName is the schema descriptor for name field.
	winddirectionDescName := winddirectionFields[0].Descriptor()
	// winddirection.NameValidator is a validator for the "name" field. It is called by the builders before save.
	winddirection.NameValidator = winddirectionDescName.Validators[0].(func(string) error)
}
